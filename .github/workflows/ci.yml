name: CI

on:
  workflow_dispatch:
  push:
    branches:
      - dev
      - master

# only run the latest commit to avoid cache overwrites
concurrency:
  group: ${{ github.ref }}
  cancel-in-progress: true

env:
  PYTHON_VERSION: 3.9

jobs:
  build:
    runs-on: ubuntu-latest
    name: AMD64/ARM64 Build
    steps:
      - name: Check out code
        uses: actions/checkout@v4
      - name: Set up QEMU and Buildx
        id: setup
        uses: ./.github/actions/setup
        with:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Log in to the Container registry
        uses: docker/login-action@v3
        with:
          username: malenurse
          password: ${{ secrets.DOCKERHUB_TOKEN }}
#      - name: Create short sha
#        run: echo "SHORT_SHA=${GITHUB_SHA::7}" >> $GITHUB_ENV
#      - id: lowercaseRepo
#        uses: ASzc/change-string-case-action@v5
#        with:
#          string: ${{ github.repository }}
      - name: Build and push standard build
        uses: docker/build-push-action@v5
        with:
          context: .
          file: docker/main/Dockerfile
          push: true
          platforms: linux/amd64,linux/arm64
          target: frigate
          tags: |
            ${{ steps.setup.outputs.image-name }}-standard-arm64
          cache-from: type=registry,ref=${{ steps.setup.outputs.cache-name }}-arm64
      - name: Build and push RPi build
        uses: docker/bake-action@v4
        with:
          push: true
          targets: rpi
          files: docker/rpi/rpi.hcl
          set: |
            rpi.tags=${{ steps.setup.outputs.image-name }}-rpi
            *.cache-from=type=registry,ref=${{ steps.setup.outputs.cache-name }}-arm64
            *.cache-to=type=registry,ref=${{ steps.setup.outputs.cache-name }}-arm64,mode=max
      #- name: Build and push RockChip build
      #  uses: docker/bake-action@v3
      #  with:
      #    push: true
      #    targets: rk
      #    files: docker/rockchip/rk.hcl
      #    set: |
      #      rk.tags=${{ steps.setup.outputs.image-name }}-rk
      #      *.cache-from=type=gha
  jetson_jp4_build:
    runs-on: ubuntu-latest
    name: AMD64 Extra Build
    needs:
      - build
    steps:
      - name: Check out code
        uses: actions/checkout@v4
      - name: Set up QEMU and Buildx
        id: setup
        uses: ./.github/actions/setup
        with:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Log in to the Container registry
        uses: docker/login-action@v3
        with:
          username: malenurse
          password: ${{ secrets.DOCKERHUB_TOKEN }}
#      - name: Create short sha
#        run: echo "SHORT_SHA=${GITHUB_SHA::7}" >> $GITHUB_ENV
#      - id: lowercaseRepo4
#        uses: ASzc/change-string-case-action@v5
#        with:
#          string: ${{ github.repository }}
      - name: Build and push TensorRT (x86 GPU)
        env:
          COMPUTE_LEVEL: "50 60 70 80 90"
        uses: docker/bake-action@v4
        with:
          push: true
          targets: tensorrt
          files: docker/tensorrt/trt.hcl
          set: |
            tensorrt.tags=${{ steps.setup.outputs.image-name-hashed }}-tensorrt
            *.cache-from=type=registry,ref=${{ steps.setup.outputs.cache-name }}
            *.cache-to=type=registry,ref=${{ steps.setup.outputs.cache-name }},mode=max
